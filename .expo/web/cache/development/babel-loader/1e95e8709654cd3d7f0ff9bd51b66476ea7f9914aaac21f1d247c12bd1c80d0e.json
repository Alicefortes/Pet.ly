{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { collection, getDocs, addDoc, where, query } from 'firebase/firestore/lite';\nimport { db, auth } from \"./firebase.js\";\nexport function getAllNotes() {\n  return _getAllNotes.apply(this, arguments);\n}\nfunction _getAllNotes() {\n  _getAllNotes = _asyncToGenerator(function* () {\n    try {\n      var notesCol = query(collection(db, \"notes\"), where(\"userEmail\", \"==\", auth.currentUser.email));\n      var notesSnapshot = yield getDocs(notesCol);\n      var notesList = notesSnapshot.docs.map(function (doc) {\n        return _objectSpread(_objectSpread({}, doc.data()), {}, {\n          id: doc.id\n        });\n      });\n      return notesList;\n    } catch (error) {\n      console.log('Erro ao recuperar notas');\n    }\n  });\n  return _getAllNotes.apply(this, arguments);\n}\nexport function getPetNotes(_x) {\n  return _getPetNotes.apply(this, arguments);\n}\nfunction _getPetNotes() {\n  _getPetNotes = _asyncToGenerator(function* (petId) {\n    try {\n      var notesCol = query(collection(db, \"notes\"), where(\"petId\", \"==\", petId));\n      var notesSnapshot = yield getDocs(notesCol);\n      var notesList = notesSnapshot.docs.map(function (doc) {\n        return _objectSpread(_objectSpread({}, doc.data()), {}, {\n          id: doc.id\n        });\n      });\n      return notesList;\n    } catch (error) {\n      console.log('Erro ao recuperar notas');\n    }\n  });\n  return _getPetNotes.apply(this, arguments);\n}\nexport function addNote(_x2) {\n  return _addNote.apply(this, arguments);\n}\nfunction _addNote() {\n  _addNote = _asyncToGenerator(function* (note) {\n    try {\n      var notesCol = collection(db, 'notes');\n      yield addDoc(notesCol, note);\n      console.log('Nota cadastrada com sucesso!');\n    } catch (error) {\n      console.error('Erro ao cadastrar nota:', error);\n    }\n  });\n  return _addNote.apply(this, arguments);\n}","map":{"version":3,"names":["collection","getDocs","addDoc","where","query","db","auth","getAllNotes","_getAllNotes","apply","arguments","_asyncToGenerator","notesCol","currentUser","email","notesSnapshot","notesList","docs","map","doc","_objectSpread","data","id","error","console","log","getPetNotes","_x","_getPetNotes","petId","addNote","_x2","_addNote","note"],"sources":["C:/Users/Sahui/Desktop/projeto 2/pet.ly/services/notes.js"],"sourcesContent":["import { collection, getDocs, addDoc, where, query } from 'firebase/firestore/lite';\r\nimport { db, auth } from \"./firebase.js\"\r\n\r\nexport async function getAllNotes() {\r\n    try{\r\n        const notesCol = query(collection(db, \"notes\"), where(\"userEmail\", \"==\", auth.currentUser.email));\r\n        const notesSnapshot = await getDocs(notesCol);\r\n        const notesList = notesSnapshot.docs.map(doc => ({ ... doc.data(), id: doc.id}));\r\n        return notesList;\r\n    }catch(error){\r\n        console.log('Erro ao recuperar notas')\r\n    }\r\n}\r\n\r\nexport async function getPetNotes(petId) {\r\n  try{\r\n      const notesCol = query(collection(db, \"notes\"), where(\"petId\", \"==\", petId));\r\n      const notesSnapshot = await getDocs(notesCol);\r\n      const notesList = notesSnapshot.docs.map(doc => ({ ... doc.data(), id: doc.id}));\r\n      return notesList;\r\n  }catch(error){\r\n      console.log('Erro ao recuperar notas')\r\n  }\r\n}\r\n\r\nexport async function addNote(note) {\r\n    try {\r\n      const notesCol = collection(db, 'notes');\r\n      await addDoc(notesCol, note);\r\n      console.log('Nota cadastrada com sucesso!');\r\n    } catch (error) {\r\n      console.error('Erro ao cadastrar nota:', error);\r\n    }\r\n}"],"mappings":";;;;AAAA,SAASA,UAAU,EAAEC,OAAO,EAAEC,MAAM,EAAEC,KAAK,EAAEC,KAAK,QAAQ,yBAAyB;AACnF,SAASC,EAAE,EAAEC,IAAI;AAEjB,gBAAsBC,WAAWA,CAAA;EAAA,OAAAC,YAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAShC,SAAAF,aAAA;EAAAA,YAAA,GAAAG,iBAAA,CATM,aAA6B;IAChC,IAAG;MACC,IAAMC,QAAQ,GAAGR,KAAK,CAACJ,UAAU,CAACK,EAAE,EAAE,OAAO,CAAC,EAAEF,KAAK,CAAC,WAAW,EAAE,IAAI,EAAEG,IAAI,CAACO,WAAW,CAACC,KAAK,CAAC,CAAC;MACjG,IAAMC,aAAa,SAASd,OAAO,CAACW,QAAQ,CAAC;MAC7C,IAAMI,SAAS,GAAGD,aAAa,CAACE,IAAI,CAACC,GAAG,CAAC,UAAAC,GAAG;QAAA,OAAAC,aAAA,CAAAA,aAAA,KAAWD,GAAG,CAACE,IAAI,CAAC,CAAC;UAAEC,EAAE,EAAEH,GAAG,CAACG;QAAE;MAAA,CAAE,CAAC;MAChF,OAAON,SAAS;IACpB,CAAC,QAAMO,KAAK,EAAC;MACTC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IAC1C;EACJ,CAAC;EAAA,OAAAjB,YAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAED,gBAAsBgB,WAAWA,CAAAC,EAAA;EAAA,OAAAC,YAAA,CAAAnB,KAAA,OAAAC,SAAA;AAAA;AAShC,SAAAkB,aAAA;EAAAA,YAAA,GAAAjB,iBAAA,CATM,WAA2BkB,KAAK,EAAE;IACvC,IAAG;MACC,IAAMjB,QAAQ,GAAGR,KAAK,CAACJ,UAAU,CAACK,EAAE,EAAE,OAAO,CAAC,EAAEF,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE0B,KAAK,CAAC,CAAC;MAC5E,IAAMd,aAAa,SAASd,OAAO,CAACW,QAAQ,CAAC;MAC7C,IAAMI,SAAS,GAAGD,aAAa,CAACE,IAAI,CAACC,GAAG,CAAC,UAAAC,GAAG;QAAA,OAAAC,aAAA,CAAAA,aAAA,KAAWD,GAAG,CAACE,IAAI,CAAC,CAAC;UAAEC,EAAE,EAAEH,GAAG,CAACG;QAAE;MAAA,CAAE,CAAC;MAChF,OAAON,SAAS;IACpB,CAAC,QAAMO,KAAK,EAAC;MACTC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IAC1C;EACF,CAAC;EAAA,OAAAG,YAAA,CAAAnB,KAAA,OAAAC,SAAA;AAAA;AAED,gBAAsBoB,OAAOA,CAAAC,GAAA;EAAA,OAAAC,QAAA,CAAAvB,KAAA,OAAAC,SAAA;AAAA;AAQ5B,SAAAsB,SAAA;EAAAA,QAAA,GAAArB,iBAAA,CARM,WAAuBsB,IAAI,EAAE;IAChC,IAAI;MACF,IAAMrB,QAAQ,GAAGZ,UAAU,CAACK,EAAE,EAAE,OAAO,CAAC;MACxC,MAAMH,MAAM,CAACU,QAAQ,EAAEqB,IAAI,CAAC;MAC5BT,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC7C,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;EAAA,OAAAS,QAAA,CAAAvB,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}