{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React from \"react\";\nimport { Button, Text } from \"native-base\";\nimport { signInWithRedirect, getRedirectResult } from \"firebase/auth\";\nimport { addUser, verifyUserExists } from \"../../services/users\";\nimport { auth, provider } from \"../../services/firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function LoginButton() {\n  function registerUser(_x) {\n    return _registerUser.apply(this, arguments);\n  }\n  function _registerUser() {\n    _registerUser = _asyncToGenerator(function* (user) {\n      var userExist = yield verifyUserExists(user.uid);\n      if (userExist) {\n        console.log(\"Usuário já registrado: \", user.displayName);\n      } else {\n        console.log(\"Novo cadastro realizado!\");\n        var user_infos = {\n          name: user.displayName,\n          email: user.email,\n          uId: user.uid,\n          photoUrl: user.photoURL\n        };\n        addUser(user_infos);\n      }\n    });\n    return _registerUser.apply(this, arguments);\n  }\n  function signIn() {\n    return _signIn.apply(this, arguments);\n  }\n  function _signIn() {\n    _signIn = _asyncToGenerator(function* () {\n      try {\n        yield signInWithRedirect(auth, provider);\n        var result = yield getRedirectResult(auth);\n        var user = result.user;\n        yield registerUser(user);\n      } catch (error) {\n        console.log('Promise Rejected:', error.message);\n      }\n    });\n    return _signIn.apply(this, arguments);\n  }\n  return _jsx(Button, {\n    onPress: signIn,\n    borderRadius: \"full\",\n    backgroundColor: \"white\",\n    borderColor: \"#FE5000\",\n    borderWidth: \"1\",\n    children: _jsx(Text, {\n      color: \"#FE5000\",\n      fontFamily: \"Mont\",\n      children: \"Login com Google\"\n    })\n  });\n}","map":{"version":3,"names":["React","Button","Text","signInWithRedirect","getRedirectResult","addUser","verifyUserExists","auth","provider","jsx","_jsx","LoginButton","registerUser","_x","_registerUser","apply","arguments","_asyncToGenerator","user","userExist","uid","console","log","displayName","user_infos","name","email","uId","photoUrl","photoURL","signIn","_signIn","result","error","message","onPress","borderRadius","backgroundColor","borderColor","borderWidth","children","color","fontFamily"],"sources":["C:/Users/Sahui/Desktop/projeto 2/pet.ly/src/components/LoginButton.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Button, Text } from \"native-base\"\r\nimport { signInWithRedirect, getRedirectResult } from \"firebase/auth\";\r\nimport { addUser, verifyUserExists } from '../../services/users';\r\nimport { auth, provider } from '../../services/firebase';\r\n\r\nexport default function LoginButton(){\r\n\r\n    async function registerUser(user){\r\n      let userExist = await verifyUserExists(user.uid);  \r\n        if (userExist){\r\n          console.log(\"Usuário já registrado: \", user.displayName)\r\n        } else{\r\n            console.log(\"Novo cadastro realizado!\")\r\n\r\n            // Início cadastro de usuários\r\n            let user_infos = {\r\n              name: user.displayName,\r\n              email: user.email,\r\n              uId: user.uid,\r\n              photoUrl: user.photoURL\r\n            }\r\n            addUser(user_infos)\r\n            // Fim cadastro de usuários\r\n        }\r\n    }\r\n\r\n    async function signIn() {\r\n      try {\r\n        await signInWithRedirect(auth, provider);\r\n        const result = await getRedirectResult(auth);\r\n        const user = result.user;\r\n        await registerUser(user);\r\n      } catch (error) {\r\n        console.log('Promise Rejected:', error.message);\r\n      }\r\n    }\r\n\r\n    return(\r\n        <Button\r\n            onPress={signIn}\r\n            borderRadius=\"full\"\r\n            backgroundColor=\"white\"\r\n            borderColor=\"#FE5000\" \r\n            borderWidth=\"1\"\r\n            \r\n        >\r\n          <Text \r\n            color=\"#FE5000\"\r\n            fontFamily=\"Mont\">\r\n            Login com Google\r\n          </Text>\r\n        </Button>\r\n     )\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,IAAI,QAAQ,aAAa;AAC1C,SAASC,kBAAkB,EAAEC,iBAAiB,QAAQ,eAAe;AACrE,SAASC,OAAO,EAAEC,gBAAgB;AAClC,SAASC,IAAI,EAAEC,QAAQ;AAAkC,SAAAC,GAAA,IAAAC,IAAA;AAEzD,eAAe,SAASC,WAAWA,CAAA,EAAE;EAAA,SAElBC,YAAYA,CAAAC,EAAA;IAAA,OAAAC,aAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,cAAA;IAAAA,aAAA,GAAAG,iBAAA,CAA3B,WAA4BC,IAAI,EAAC;MAC/B,IAAIC,SAAS,SAASb,gBAAgB,CAACY,IAAI,CAACE,GAAG,CAAC;MAC9C,IAAID,SAAS,EAAC;QACZE,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEJ,IAAI,CAACK,WAAW,CAAC;MAC1D,CAAC,MAAK;QACFF,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;QAGvC,IAAIE,UAAU,GAAG;UACfC,IAAI,EAAEP,IAAI,CAACK,WAAW;UACtBG,KAAK,EAAER,IAAI,CAACQ,KAAK;UACjBC,GAAG,EAAET,IAAI,CAACE,GAAG;UACbQ,QAAQ,EAAEV,IAAI,CAACW;QACjB,CAAC;QACDxB,OAAO,CAACmB,UAAU,CAAC;MAEvB;IACJ,CAAC;IAAA,OAAAV,aAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAEcc,MAAMA,CAAA;IAAA,OAAAC,OAAA,CAAAhB,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAe,QAAA;IAAAA,OAAA,GAAAd,iBAAA,CAArB,aAAwB;MACtB,IAAI;QACF,MAAMd,kBAAkB,CAACI,IAAI,EAAEC,QAAQ,CAAC;QACxC,IAAMwB,MAAM,SAAS5B,iBAAiB,CAACG,IAAI,CAAC;QAC5C,IAAMW,IAAI,GAAGc,MAAM,CAACd,IAAI;QACxB,MAAMN,YAAY,CAACM,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOe,KAAK,EAAE;QACdZ,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEW,KAAK,CAACC,OAAO,CAAC;MACjD;IACF,CAAC;IAAA,OAAAH,OAAA,CAAAhB,KAAA,OAAAC,SAAA;EAAA;EAED,OACIN,IAAA,CAACT,MAAM;IACHkC,OAAO,EAAEL,MAAO;IAChBM,YAAY,EAAC,MAAM;IACnBC,eAAe,EAAC,OAAO;IACvBC,WAAW,EAAC,SAAS;IACrBC,WAAW,EAAC,GAAG;IAAAC,QAAA,EAGjB9B,IAAA,CAACR,IAAI;MACHuC,KAAK,EAAC,SAAS;MACfC,UAAU,EAAC,MAAM;MAAAF,QAAA,EAAC;IAEpB,CAAM;EAAC,CACD,CAAC;AAEjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}